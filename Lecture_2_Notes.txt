- VHDL block that extracts data from IvP4

preamble bit alignment, SFD byte alignment

------------------------------------------------------------------

To check if packet is good:

1 0 1 0 1  -represent bit sequence by a polynomial
M(x) = x^4 + x^2 + 1 (x^0)

G(x) = g_32 * x^32 + g_31 * x^31 + ... + g_1*x_1 + g_0


C_T(x) = M(x) * G(X) -> Transceiver

C_R(x)/(G(x) = remainder 0, packet is good! -> Receiver

However C_T(x) will look random, so not the best way to do

------------------------------------------------------------------

------------------------------------------------------------------

Want to transmit a 'systematic code'

T(x)  = M(x)*x^32 -> left shift by 32 bits

T(x)  = M(x)*x^32 + R(x)  -->M(x)*x^32 is 'clear text'

R(x) = reminder(T(x)/G(x))

M(x)*x^32 = Q(x)G(x) + R(x)

M(x)*x^32 + R(x) = Q(x)G(x)+Rix)+R(x)

T(x) = Q(x)*G(x) i.e. a quotient times G(x)


------------------------------------------------------------------

Need to make given circuit. Reminder will be reminder of the 32 registers (should all be 0 at same time).


G(x) = x^3+x^2+1 [g1=1 g2=1 g1=0 g0=1]

g1=0 means no g1 connection to the OR gate

	R(0) <= R(2) + m 	;  R(1) <= R(0)  	; 	R(3) <= R(1) + R(2) --> Equations to process 1 bit at a time

	Ro R1 R2 M0 M1 M2 	;  Ro R1 R2 M0 M1 M2	; 	Ro R1 R2 M0 M1 M2

 	1 0   0  0  0  0          0  1   0  0  0  0    ;       0  0   1  0  0  0 

Bit 1)	0 0   1  0  0  0          1  0   0  0  0  0            0   1  1  0  0  0
Bit 2)	0 1   1  0  1  0          0  0   1  1  0  0            1   1  1  0  0  0
Bit 3)	1 1   1  0  0  1          0  1   1  0  1  0            1   1  0  1  0  0

=       R0++R1*R2*M2                R1+r2*M1                      R0+R1+M0  --> Equations to process 3 bits at a time

Having 8 bits will be far too large. Will show how to do with Matrix Algebra







	























